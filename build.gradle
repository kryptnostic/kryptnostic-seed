
//Easy semantic version based off describe + tags
def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags', '--dirty', '--long'
    standardOutput = stdout
  }
  def tagVer = stdout.toString().trim()
  def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

  if (tagVer.contains('dev')) {
    semVer += "-SNAPSHOT"
  }
  return semVer
}

description = "Kryptnostic Seed Project"
group = "com.kryptnostic"
version = getVersionName()

apply plugin: "application"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "jacoco"

mainClassName = "com.kryptnostic.seed.v1.Main"

sourceCompatibility=JavaVersion.VERSION_1_8
targetCompatibility=JavaVersion.VERSION_1_8

repositories {
  mavenCentral()  
  mavenLocal()
  
  maven {
    url "http://maven.springframework.org/snapshot"
  }
  maven {
    url  "http://maven.springframework.org/milestone"
  }
  maven {
   url "http://repo.maven.apache.org/maven2"
 }
 maven {
  url "https://oss.sonatype.org/content/repositories/snapshots"
}

}

ext.spring_security_version='3.2.4.RELEASE'
ext.spring_framework_version='4.0.6.RELEASE'
ext.jackson_version='2.5.1'
ext.jetty_version='9.2.2.v20140723'
ext.hazelcast_version='3.2.5'
ext.fhe_core_version='0.1.1-SNAPSHOT'
ext.kodex_version='0.0.1-SNAPSHOT'
ext.iris_version='0.0.1-SNAPSHOT'
dependencies {
    /*
     * SL4J + LOG4J
     * Currently use Log4J through sl4j. 
     * TODO: Switch to logback
     */
     compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.6'
     compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.6'
     
     compile "log4j:log4j:1.2.17"
     
     
    /*
     * Metrics
     * Awesome reporting-- defaults to Graphite
     * TODO: Integrate Ryan's Spring integration 
     */
     compile 'com.codahale.metrics:metrics-core:3.0.1'
     compile 'com.codahale.metrics:metrics-graphite:3.0.1'
     compile 'com.ryantenney.metrics:metrics-spring:3.0.0'

    /*
     * GUAVA 
     * EventBus, FluentIterables, ListenableFutures and more
     */
     compile 'com.google.guava:guava:18.0'

    /*
     JODA TIME - A better datetime class.
     */
     compile 'joda-time:joda-time:2.3'
     
    /*
     * APACHE COMMONS
     * Logging, StringUtils, RandomStringUtils, IOUtils, and more
     */
     compile 'commons-io:commons-io:2.4'
     compile 'org.apache.commons:commons-lang3:3.1'
     compile 'commons-logging:commons-logging:1.1.3'
     compile 'commons-cli:commons-cli:1.2'
     compile 'commons-collections:commons-collections:3.2.1'


    /*
     * @Inject and @Nullable support
     */
     compile 'javax.inject:javax.inject:1'
     compile 'com.google.code.findbugs:jsr305:1.3.9'
     
    /*
     * Kryo serialization -- faster generic Java serialization
     */
     compile 'com.esotericsoftware.kryo:kryo:2.22'

    /*
     * TESTING
     */
     testCompile "junit:junit:4.11"
     testCompile "org.mockito:mockito-all:1.9.5"

  /*
   * Kryptnostic Libraries
   */

   
   logger.quiet(project.name + " using jar dependencies.")
   compile "com.kryptnostic:kryptnostic-api:${fhe_core_version}"
   compile "com.kryptnostic:kryptnostic-core:${fhe_core_version}"
   compile "com.kryptnostic:kodex:${kodex_version}"
   compile "com.kryptnostic:iris:${iris_version}"
 }

 task sourcesJar (type : Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

eclipse {
  ext.downloadSources = true
  ext.downloadJavadoc = true

  ext.sourceCompatibility=JavaVersion.VERSION_1_8
  ext.targetCompatibility=JavaVersion.VERSION_1_8
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.4'
}



